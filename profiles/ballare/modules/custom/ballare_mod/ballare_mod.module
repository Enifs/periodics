<?php

/**
 * Implements hook_form_alter(&$form, &$form_state, $form_id).
 */
function ballare_mod_form_alter(&$form, &$form_state, $form_id) {
//
//  if ($form_id=='celebration_node_form'){
//    $form['field_calendar_date']['und'][0]['#element_validate'][1] = $form['field_calendar_date']['und'][0]['#element_validate'][0];
//    $form['field_calendar_date']['und'][0]['#element_validate'][0] = 'ballare_date_validate';
//  }
  $module_path = drupal_get_path('module', 'ballare_mod');
  drupal_add_css($module_path . '/ballare_mod.css');
}

function ballare_date_validate($element, &$form_state) {
//  $element['#value']['value']['year'] = 2012;
//  if ($element['#value']['value']['year']){
//    
//  }
//ob_start();
//print_r($element);
//$output = ob_get_contents();
//ob_end_clean();
//$h = fopen('log.txt', 'w');
//fwrite($h, $output);
//fclose($h);
}

/**
 * Implements hook_menu().
 *
 * Here we set up the URLs (menu entries) for the
 * form examples. Note that most of the menu items
 * have page callbacks and page arguments set, with
 * page arguments set to be functions in external files.
 */
function ballare_mod_menu() {
  $items = array();
  $items['subscribe_others'] = array(
    'title' => t('Bulk subscription form'),
    'page callback' => 'ballare_render_subscribe_form',
    'access arguments' => array('access content'),
    'description' => t('Subscribe others to content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function ballare_render_subscribe_form() {
  return drupal_get_form('ballare_subscribe_form');
}

function ballare_subscribe_form($form_state) {
// Build the sortable table header.
  $header = array(
    'title' => array('data' => t('Name'), 'field' => 'u.name'),
  );
  //Get the user data.
  $query = db_select('users', 'u')
      ->fields('u', array('uid'))
      ->condition('uid', 1, '>');
  $uids = $query
      ->extend('TableSort')
      ->orderByHeader($header)
      ->execute()
      ->fetchCol();
  $users = user_load_multiple($uids);

  $options = array();
  foreach ($users as $subscriber) {
    $options[$subscriber->uid] = array(
      'title' => $subscriber->name,
    );
  }
  $form['force_subscribe'] = array(
    '#type' => 'fieldset',
    '#title' => t('Subscribe the following users:'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );
  //Build the tableselect.
  $form['force_subscribe']['subscribers'] = array(
    '#type' => 'tableselect',
    '#header' => $header,
    '#options' => $options,
    '#empty' => t('No content available.'),
  );
  
  
  
  
  //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  // if (page argument = null) show this:
  if (TRUE) {
    $form['force_subscribe']['content_item'] = array(
      '#type' => 'textfield',
      '#title' => "The users will be subscribed to this content item:",
    );
  }
  // if (page argument = numeric) show this:
  else if (FALSE) {
// Build the sortable table header.
    $node_header = array(
      'title' => array('data' => t('Name'), 'field' => 'u.name'),
    );
    //Get the user data.
    $query = db_select('users', 'u')
        ->fields('u', array('uid'))
        ->condition('uid', 1, '>');
    $uids = $query
        ->extend('TableSort')
        ->orderByHeader($header)
        ->execute()
        ->fetchCol();
    $users = user_load_multiple($uids);

    $options = array();
    foreach ($users as $subscriber) {
      $options[$subscriber->uid] = array(
        'title' => $subscriber->name,
      );
    }
    //Build the tableselect.
    $form['force_subscribe']['nodes'] = array(
      '#type' => 'tableselect',
      '#header' => $node_header,
      '#options' => $options,
      '#empty' => t('No content available.'),
    );
  }





  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );
  return $form;
}

function my_module_my_form_validate($form, &$form_state) {
  $year_of_birth = $form_state['values']['year_of_birth'];
  if ($year_of_birth && ($year_of_birth < 1900 || $year_of_birth > 2000)) {
    form_set_error('year_of_birth', 'Enter a year between 1900 and 2000.');
  }
}

// Adds a submit handler/function to our form to send a successful
// completion message to the screen.
function my_module_my_form_submit($form, &$form_state) {
  drupal_set_message(t('The form has been submitted.'));
}
